# language: node_js # we'll provide with conda

os:
  - linux
#  - osx

# node_js:
#   - "node"

env:
  - PKG_NAME=mountainlab  CONDA_CHANNEL_ARGS="-c local -c defaults -c conda-forge" CONDA_APPEND_ARGS="--append-file=recipe_append.yaml"

install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - source $HOME/miniconda/etc/profile.d/conda.sh
  - hash -r
  - conda config --set always_yes yes --set changeps1 no --set auto_update_conda no
#  - conda create -n ml-env conda-build
  - conda info -a
# - conda activate ml-env
  - conda activate
  - conda install build
  - conda build ${CONDA_CHANNEL_ARGS} ${CONDA_APPEND_ARGS} recipe.${PKG_NAME}
  - conda_pkg=$(conda build ${CONDA_CHANNEL_ARGS} ${CONDA_APPEND_ARGS} recipe.${PKG_NAME} --output)
  - echo conda_pkg = $conda_pkg
  - conda search -c local ${PKG_NAME}
  - conda install ${CONDA_CHANNEL_ARGS} ${PKG_NAME}

script:
  - conda activate ml-env
  - conda list
  - which -a npm
  - echo PATH=$PATH
  - npm list -g mountainlab
  - echo npm prefix -g = `npm prefix -g`
  - which ml-config
  - ml-config
  - ml-list-processors
